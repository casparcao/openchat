spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=openchat
spring.rabbitmq.password=openchat
spring.rabbitmq.virtual-host = /
spring.rabbitmq.publisher-confirm-type = CORRELATED
# 重试策略
spring.rabbitmq.template.retry = true
spring.rabbitmq.template.retry.max-attempts = 16
spring.rabbitmq.template.retry.multiplier = 2
spring.rabbitmq.template.retry.max-interval = 60000ms
#容器类型.simple或direct
spring.rabbitmq.listener.type = simple
# 是否启动时自动启动容器
spring.rabbitmq.listener.simple.auto-startup=true
# 表示消息确认方式，其有三种配置方式，分别是none、manual和auto；默认auto
spring.rabbitmq.listener.simple.acknowledge-mode = AUTO
# 最小的消费者数量
spring.rabbitmq.listener.simple.concurrency = 2
# 最大的消费者数量
spring.rabbitmq.listener.simple.max-concurrency = 4
#  一个消费者最多可处理的nack消息数量，如果有事务的话，必须大于等于transaction数量.
spring.rabbitmq.listener.simple.prefetch = 2
# 当ack模式为auto时，一个事务（ack间）处理的消息数量，最好是小于等于prefetch的数量.若大于prefetch， 则prefetch将增加到这个值
spring.rabbitmq.listener.simple.transaction-size = 2
# 决定被拒绝的消息是否重新入队；默认是true（与参数acknowledge-mode有关系）
spring.rabbitmq.listener.simple.default-requeue-rejected = false
#  若容器声明的队列在代理上不可用，是否失败； 或者运行时一个多多个队列被删除，是否停止容器
spring.rabbitmq.listener.simple.missing-queues-fatal=true
# 发布空闲容器的时间间隔，单位毫秒
spring.rabbitmq.listener.simple.idle-event-interval= 10000ms
# 监听重试是否可用
spring.rabbitmq.listener.simple.retry.enabled=true
# 最大重试次数
spring.rabbitmq.listener.simple.retry.max-attempts = 16
# 最大重试时间间隔
spring.rabbitmq.listener.simple.retry.max-interval=60000ms
#第一次和第二次尝试传递消息的时间间隔
spring.rabbitmq.listener.simple.retry.initial-interval=1000ms
# 应用于上一重试间隔的乘数
spring.rabbitmq.listener.simple.retry.multiplier=2
# 重试时有状态or无状态
spring.rabbitmq.listener.simple.retry.stateless=true

spring.rabbitmq.listener.direct.acknowledge-mode= AUTO
spring.rabbitmq.listener.direct.auto-startup=true
spring.rabbitmq.listener.direct.consumers-per-queue = 2
spring.rabbitmq.listener.direct.default-requeue-rejected=
spring.rabbitmq.listener.direct.idle-event-interval=
spring.rabbitmq.listener.direct.missing-queues-fatal=true
spring.rabbitmq.listener.direct.prefetch=
spring.rabbitmq.listener.direct.retry.enabled=false
spring.rabbitmq.listener.direct.retry.initial-interval=1000ms
spring.rabbitmq.listener.direct.retry.max-attempts=3
spring.rabbitmq.listener.direct.retry.max-interval=10000ms
spring.rabbitmq.listener.direct.retry.multiplier=1
spring.rabbitmq.listener.direct.retry.stateless=true
